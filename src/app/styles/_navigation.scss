@keyframes segueError {
  0%{
    border: 5px solid $msWhite;
    color: $msWhite;
    background-color: $msNavy;
  }
  1% {
    border: 5px solid $msRed;
  }
  50% {
    background-color: $msRed;
    color: rgba(0, 0, 0, 0);
  }
  51%{
    color: $msRed;
  }
  100% {
    animation-timing-function: ease-in;
    color: white;
    background-color: $msRed;
    border: 5px solid $msRed;
  }
}


//@keyframes segueErrorReverse {
//
//  1% {
//    animation-timing-function: ease-out;
//    background-color: $msRed;
//    border: 5px solid $msRed;
//  }
//  50% {
//    color: $msRed;
//  }
//  51%{
//    background-color: $msNavy;
//    color: rgba(0, 0, 0, 0);
//  }
//  100% {
//    border: 5px solid $msNavy2;
//    color: white;
//  }
//}


@keyframes updateContent {
  0% {
    opacity: 1;
    width: auto;
  }
  50% {
    opacity: 0;
    width: 0;
  }
  100% {
    animation-timing-function: ease-in;
    opacity: 1;
    width: auto;
  }
}
@keyframes hideError {
  0% {
    opacity:1;
    width: auto;
  }
  90% {
    opacity:0;
    width: 0;
  }
  100% {
    animation-timing-function: ease-in;
    opacity:0;
    width: 0;
  }
}
@keyframes showError {
  0% {
    opacity:0;
    width: 0;
  }
  50% {
    width: 0;
  }
  100% {
    animation-timing-function: ease-in;
    opacity:1;
    width: auto;
  }
}

@keyframes showButtons {
  50% {
    width: 0;
    opacity: 0;
  }
  100% {
    animation-timing-function: ease-in;
    width: $segueWrapperHeight * .5;
    opacity: 1;
  }
}

.bottomNav {
  height: $segueWrapperHeight;
  .segueWrapper {
    .segueButton {
      height: $segueWrapperHeight / 2.5;
      width: auto;
      padding: 5px 15px;
      border-radius: 40px;
      color: white;
      background: $msNavy;

      #segueContent {
        overflow: hidden;
        font: 100% Rubik, sans-serif;
        position: relative;
        top: -10px;

      }
      #nextSVG {
        position: relative;
        top: 2px;
        left: 3px;
        display: inline;
      }
      #closeSVG{
        position: relative;
        top: 4px;
        left: 3px;
        //display: none;// << HACKY display doesnt animate well.. so opacity and width are used in place
        width: 0;
      }
      &.ready {
        border: 5px solid $msGreen;
      }
      &.blocked {
        border: 5px solid $msWhite;
      }
      &.error {
        -webkit-animation-name: segueError;
        -webkit-animation-duration: $errorTimer;
        animation-name: segueError;
        animation-duration: $errorTimer;
        animation-fill-mode: forwards;
        border: 5px solid $msRed;

        #segueContent{
          -webkit-animation-name: updateContent;
          -webkit-animation-duration: $errorTimer;
          animation-name: updateContent;
          animation-duration: $errorTimer;
          animation-fill-mode: forwards;
        }
        #nextSVG {
          -webkit-animation-name: hideError;
          -webkit-animation-duration: $errorTimer;
          animation-name: hideError;
          animation-duration: $errorTimer;
          animation-fill-mode: forwards;
        }
        #closeSVG {
          -webkit-animation-name: showError;
          -webkit-animation-duration: $errorTimer;
          animation-name: showError;
          animation-duration: $errorTimer;
          animation-fill-mode: forwards;
        }
      }
    }
    .errorButton{
      height: $segueWrapperHeight / 2.5;
      width: 0;
      text-transform: uppercase;
      background: $msNavy;
      border-radius: 40px;
      color: $msWhite;
      border: 5px solid $msNavy2;
      opacity: 0;
      &.show{
        -webkit-animation-name: showButtons;
        -webkit-animation-duration: $errorTimer;
        animation-name: showButtons;
        animation-duration: $errorTimer;
        animation-fill-mode: forwards;
      }
    }
    .yesButton{

    }
    .noButton{

    }
    .buttonClearfix{
      opacity: 0;
      width: 0;
    }
  }

  .backButton {
    height: $segueWrapperHeight / 2.5;
    width: $segueWrapperHeight / 2.5;
    text-transform: uppercase;
    background: none;
    border-radius: 40px;
    color: $msNavy2;
    border: 5px solid $msNavy2;
    svg {
      position: relative;
      left: 3px;
    }
    tspan {
      fill: $msWhite;
    }
    &.blocked {
      tspan {
        fill: $msNavy2;
      }
    }
    &.hide {
      visibility: hidden;
    }
  }
  .forwardButton {
    height: $segueWrapperHeight / 2.5;
    width: $segueWrapperHeight / 2.5;
    text-transform: uppercase;
    background: none;
    border-radius: 40px;
    color: $msNavy2;
    border: 5px solid $msNavy2;
    svg {
      position: relative;
      top: 2px;
      left: 8px;
    }
    tspan {
      fill: $msWhite;
    }
    &.blocked {
      tspan {
        fill: $msNavy2;
      }
    }
    &.hide {
      visibility: hidden;
    }
  }
}